<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Relationships are complicated, so it makes sense that some so-called 
deal breakers should be ignored, but some quirks are such bright red flags 
flapping violently in the wind that they simply must be acknowledged. 
Whether that means working together on a compromise 
or accepting that a person is just all wrong for you, here are some neon 
warning signs to be on the look out for.</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>It sounds irresistible at first, but there's nothing more infuriating 
than being put on a pedestal by a partner. This person doesn't really 
see you as you—you're a projection of some perfect idea they have in 
their head, and anytime you shatter those expectations by being a 
normal, flawed, breathing human being, they're impossible to console. 
Oh yeah, and someone being that obsessed with you is CREEPY.</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Does your new bae refuse to stop tickling you when you tell them to 
knock it off? Do they continue to touch you in seemingly innocent ways 
(like hugs, shoulder rubs or even repeatedly poking you in the arm like a 
sibling) when you ask for personal space? This might be a sign they don't 
respect your right to your own body and could try to push those 
boundaries to much more dangerous limits in the future.
</value>
  </data>
  <data name="label18.Text" xml:space="preserve">
    <value>Do they spend an entire day being cruel to you and nearly pushing 
you to your emotional limit, then abruptly turn on the charm with zero 
explanation or apology, only to switch back into monster mode as soon 
as you start to trust their good mood? This is a cycle to bolt away from, stat.</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>Some relationships end so badly that we're still sour at an ex or two 
years down the line—but if your new partner spews vitriol at any 
and all of their "crazy" former lovers every chance they get, it's a good 
clue that they are the problem.</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Research has shown that among married couples, rolling eyes at each 
can be a common predictor of divorce, and why wouldn't it be? 
Mutual respect is a major foundation of a happy relationship, and 
nobody you frequently roll your eyes at has much of your respect.</value>
  </data>
  <data name="label24.Text" xml:space="preserve">
    <value>The Worst People On The Planet are those who gleefully gaslight their 
partners (read: twisting the truth to make you doubt your sanity, memory 
or reality.) Other gross tactics include regularly mocking your ideas or 
refusing to take your opinion seriously because they're so convinced they 
can change your mind anyway that they assume they can just skip the 
whole "valuing your perspective" stuff.</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Everyone struggles with their folks sometimes (show me someone 
who blindly worships Mom and Dad as a grown adult and I'll show 
you a liar), but keep your eye open for partners who have a fundamental 
lack of respect for their parents. (Unless their parents are abusive, in 
which case, they're beyond justified in refusing to make nice with them 
if they so choose.) If they can bear to be super harsh and ungrateful to the 
people who literally gave them life, what does that say about how they'll 
treat others who get close to them?</value>
  </data>
</root>